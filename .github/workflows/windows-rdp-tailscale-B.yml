name: Windows RDP via Tailscale (B)

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Windows RDP via Tailscale (A)"]
    types: [completed]

jobs:
  rdp:
    runs-on: windows-latest
    steps:
      - name: Install Tailscale (via choco)
        shell: pwsh
        run: |
          choco install tailscale -y --no-progress
          Start-Sleep -Seconds 3
          Start-Service Tailscale -ErrorAction SilentlyContinue

      - name: Enable RDP + user + firewall
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $u='Bullettemporary'; $p='Bullet@12345'
          $sec = ConvertTo-SecureString $p -AsPlainText -Force
          if (-not (Get-LocalUser -Name $u -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $u -Password $sec -AccountNeverExpires -PasswordNeverExpires:$true
            Add-LocalGroupMember -Group Administrators -Member $u
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $u
          } else {
            Set-LocalUser -Name $u -Password $sec -AccountNeverExpires:$true
            Enable-LocalUser -Name $u
          }
          Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" | Out-Null

      - name: Cleanup old device from Tailscale
        shell: pwsh
        run: |
          $ErrorActionPreference = 'SilentlyContinue'
          $hdr = @{ Authorization = "Bearer tskey-api-k8k6TMrxJD21CNTRL-UZ4q4DdnFicBmuLEc4DqicCcr34WBQkrC" }
          $resp = Invoke-RestMethod -Method GET -Headers $hdr -Uri "https://api.tailscale.com/api/v2/tailnet/zatchati0%40gmail.com/devices"
          foreach ($d in $resp.devices) {
            if ($d.hostname -eq 'bullet') {
              Invoke-RestMethod -Method DELETE -Headers $hdr -Uri ("https://api.tailscale.com/api/v2/device/{0}" -f $d.id) | Out-Null
            }
          }

      - name: Tailscale up (fixed hostname)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $ts = Join-Path $Env:ProgramFiles 'Tailscale\tailscale.exe'
          if (-not (Test-Path $ts)) { $ts = Join-Path ${Env:ProgramFiles(x86)} 'Tailscale\tailscale.exe' }
          if (-not (Test-Path $ts)) { throw 'tailscale.exe not found after install' }

          Start-Service Tailscale -ErrorAction SilentlyContinue

          & $ts up --auth-key "tskey-auth-kCBNtpbt3H11CNTRL-rJdYwx6bnR59Gj4ivN4DR5JKvahLZ5ML" `
                   --hostname bullet --accept-routes --accept-dns=false
          Start-Sleep 5

          $ipv4 = (& $ts ip -4 | Select-Object -First 1)
          $ipv6 = (& $ts ip -6 | Select-Object -First 1)
          Write-Host "================ RDP CONNECT ================"
          Write-Host "Hostname : bullet"
          Write-Host "IPv4     : $ipv4"
          Write-Host "IPv6     : $ipv6"
          Write-Host "mstsc    : mstsc /v:bullet"
          Write-Host "Username : Bullettemporary"
          Write-Host "Password : Bullet@12345"
          Write-Host "============================================="

      - name: Keep alive (~5h 55m) & pre-dispatch partner (A)
        shell: pwsh
        run: |
          $until = (Get-Date).AddMinutes(355)
          while ((Get-Date) -lt $until) {
            Write-Host "[$(Get-Date -Format 'HH:mm:ss')] RDP alive.."
            Start-Sleep 60
          }
          Invoke-RestMethod -Method POST `
            -Uri https://api.github.com/repos/${{ github.repository }}/actions/workflows/windows-rdp-tailscale-A.yml/dispatches `
            -Headers @{ Authorization = "token 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"; "Accept"="application/vnd.github+json" } `
            -Body '{"ref":"main"}'
